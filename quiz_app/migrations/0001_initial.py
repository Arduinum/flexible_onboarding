# Generated by Django 5.0.4 on 2024-04-26 18:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='почта пользователя')),
                ('title', models.CharField(max_length=200, verbose_name='название заведения')),
                ('type_business', models.CharField(choices=[('ОБЩП', 'общепит'), ('РИТ', 'ритейл'), ('УСПЗ', 'услуга по записи')], max_length=200, verbose_name='тип бизнеса')),
                ('country_and_city', models.CharField(choices=[('ГМОС', 'Россия, г Москва'), ('ГНН', 'Россия, г Нижний Новгород'), ('ГСАМ', 'Россия, г Самара')], max_length=200, verbose_name='страна и город')),
                ('address', models.TextField(blank=True, null=True, verbose_name='адрес')),
                ('is_new_shop', models.BooleanField(default=False, verbose_name='новое заведение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
            ],
            options={
                'verbose_name': 'опрос',
                'verbose_name_plural': 'опросы',
                'db_table': 'quiz',
            },
        ),
        migrations.CreateModel(
            name='TypeAppointmentService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_fitness_centre', models.BooleanField(default=False, verbose_name='фитнес центр')),
                ('is_beauty_saloon', models.BooleanField(default=False, verbose_name='салон красоты')),
                ('is_bowling', models.BooleanField(default=False, verbose_name='боулинг')),
                ('is_clinic', models.BooleanField(default=False, verbose_name='клиника')),
                ('room_area', models.FloatField(blank=True, null=True, verbose_name='общая площадь помещения')),
                ('main_hall_area', models.FloatField(blank=True, null=True, verbose_name='площадь основного зала')),
                ('number_staff', models.IntegerField(blank=True, null=True, verbose_name='колличество персонала')),
                ('is_consultation', models.BooleanField(default=False, verbose_name='консультация')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz_app.quiz', verbose_name='опрос')),
            ],
            options={
                'verbose_name': 'тип услуга по записи',
                'verbose_name_plural': 'типы услуги по записи',
                'db_table': 'type_appointment_service',
            },
        ),
        migrations.CreateModel(
            name='TypePublicCatering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_restaurant', models.BooleanField(default=False, verbose_name='ресторан')),
                ('is_bar', models.BooleanField(default=False, verbose_name='бар')),
                ('is_cafe', models.BooleanField(default=False, verbose_name='кафе')),
                ('is_dining_room', models.BooleanField(default=False, verbose_name='столовая')),
                ('room_area', models.FloatField(blank=True, null=True, verbose_name='общая площадь помещения')),
                ('kitchen_area', models.FloatField(blank=True, null=True, verbose_name='площадь кухни')),
                ('number_seats', models.IntegerField(blank=True, null=True, verbose_name='колличество посадочных мест')),
                ('is_take_out', models.BooleanField(default=False, verbose_name='на вынос')),
                ('is_in_room', models.BooleanField(default=False, verbose_name='в помещении')),
                ('is_delivery', models.BooleanField(default=False, verbose_name='доставка')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz_app.quiz', verbose_name='опрос')),
            ],
            options={
                'verbose_name': 'тип заведения общепит',
                'verbose_name_plural': 'типы заведений общепиты',
                'db_table': 'type_public_сatering',
            },
        ),
        migrations.CreateModel(
            name='TypeRetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_clothing_store', models.BooleanField(default=False, verbose_name='магазин одежды')),
                ('is_pharmacy', models.BooleanField(default=False, verbose_name='аптека')),
                ('is_supermarket', models.BooleanField(default=False, verbose_name='супермаркет')),
                ('is_book_shop', models.BooleanField(default=False, verbose_name='книжный магазин')),
                ('room_area', models.FloatField(blank=True, null=True, verbose_name='общая площадь помещения')),
                ('warehouse_area', models.FloatField(blank=True, null=True, verbose_name='площадь склада')),
                ('number_shelving', models.IntegerField(blank=True, null=True, verbose_name='колличество стиллажей')),
                ('is_take_out', models.BooleanField(default=False, verbose_name='на вынос')),
                ('is_reservation', models.BooleanField(default=False, verbose_name='зарезервировать')),
                ('is_delivery', models.BooleanField(default=False, verbose_name='доставка')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz_app.quiz', verbose_name='опрос')),
            ],
            options={
                'verbose_name': 'тип заведения ритейл',
                'verbose_name_plural': 'типы заведений ритейлы',
                'db_table': 'type_retail',
            },
        ),
    ]
